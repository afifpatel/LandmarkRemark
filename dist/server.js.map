{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","connect","then","client","listen","console","log","catch","error","get","req","res","filter","collection","find","toArray","landmarks","metadata","total_count","length","_metadata","records","status","message","issueId","params","id","_id","limit","next","issue","post","newLandmark","body","date","Date","location","lat","parseFloat","lng","JSON","stringify","insertOne","result","findOne","insertedId","query_result","count","new_landmark","err","put","landmarkId","landmark","updateOne","$set","savedLandmark","delete","deleteOne","deleteResult","n","errror","sendFile","path","resolve"],"mappings":";;AAMA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;;;;;AAAqD;AAFG;AAFA;AAPxD;AACA;AACA;AACA;;;AASA,2BAAiBA,OAAjB,G,CAJkE;AAFV;;;AAQxD,MAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ;AACA;AACA;;AAEA,IAAIC,EAAJ;AACA,qBAAYC,OAAZ,CAAoB,qBAApB,EAA2CC,IAA3C,CAAgDC,UAAU;AACtDH,SAAKG,OAAOH,EAAP,CAAU,KAAV,CAAL;AACAJ,QAAIQ,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACnBC,gBAAQC,GAAR,CAAY,+BAAZ;AACH,KAFD;AAGH,CALD,EAKGC,KALH,CAKSC,SAAS;AACdH,YAAQC,GAAR,CAAY,QAAZ,EAAsBE,KAAtB;AACH,CAPD;;AASAZ,IAAIa,GAAJ,CAAQ,gBAAR,EAA0B,CAACC,GAAD,EAAKC,GAAL,KAAa;AACnC,UAAMC,SAAS,EAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAZ,OAAGa,UAAH,CAAc,KAAd,EAAqBC,IAArB,CAA0BF,MAA1B,EAAkCG,OAAlC,GAA4Cb,IAA5C,CAAkDc,aAAa;AAC3D,cAAMC,WAAW,EAAEC,aAAaF,UAAUG,MAAzB,EAAjB;AACAR,YAAIZ,IAAJ,CAAS,EAAEqB,WAAWH,QAAb,EAAuBI,SAAUL,SAAjC,EAAT;AACH,KAHD,EAGGT,KAHH,CAGSC,SAAQ;AACbH,gBAAQC,GAAR,CAAYE,KAAZ;AACAG,YAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAU,0BAAyBf,KAAM,EAA3C,EAArB;AACH,KAND;AAOF,CAnBF;;AAqBAZ,IAAIa,GAAJ,CAAQ,mBAAR,EAA6B,CAACC,GAAD,EAAKC,GAAL,KAAY;AACjC,QAAIa,OAAJ;AACAnB,YAAQC,GAAR,CAAY,WAAZ,EAAyBI,IAAIe,MAA7B;AACA,QAAI;AACAD,kBAAU,sBAAad,IAAIe,MAAJ,CAAWC,EAAxB,CAAV;AACH,KAFD,CAEE,OAAOlB,KAAP,EAAa;AACXG,YAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAU,4BAA2Bf,KAAM,EAA7C,EAArB;AACA;AACH;;AAEDR,OAAGa,UAAH,CAAc,KAAd,EAAqBC,IAArB,CAA0B,EAAEa,KAAMH,OAAR,EAA1B,EAA6CI,KAA7C,CAAmD,CAAnD,EACCC,IADD,GAEC3B,IAFD,CAEO4B,SAAS;AACZzB,gBAAQC,GAAR,CAAY,+BAAZ,EAA6CwB,KAA7C;AACA,YAAI,CAACA,KAAL,EAAYnB,IAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAU,kBAAiBC,OAAQ,EAArC,EAArB,EAAZ,KACKb,IAAIZ,IAAJ,CAAS+B,KAAT;AACR,KAND,EAOCvB,KAPD,CAOQC,SAAS;AACbH,gBAAQC,GAAR,CAAYE,KAAZ;AACAG,YAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAU,0BAAyBf,KAAM,EAA3C,EAArB;AACH,KAVD;AAWH,CArBL;;AAuBAZ,IAAImC,IAAJ,CAAS,eAAT,EAA0B,CAACrB,GAAD,EAAKC,GAAL,KAAa;AACnC,UAAMqB,cAActB,IAAIuB,IAAxB;AACA;AACAD,gBAAYE,IAAZ,GAAmB,IAAIC,IAAJ,EAAnB;AACAH,gBAAYI,QAAZ,CAAqBC,GAArB,GAA0BC,WAAWN,YAAYI,QAAZ,CAAqBC,GAAhC,CAA1B;AACAL,gBAAYI,QAAZ,CAAqBG,GAArB,GAA0BD,WAAWN,YAAYI,QAAZ,CAAqBG,GAAhC,CAA1B;AACDlC,YAAQC,GAAR,CAAYkC,KAAKC,SAAL,CAAeT,WAAf,CAAZ;AACC;AACA;;AAEA;AACA;AACA;AACA;;AAED;AACChC,OAAGa,UAAH,CAAc,KAAd,EAAqB6B,SAArB,CAA+BV,WAA/B,EAA4C9B,IAA5C,CAAkDyC,UAC9C3C,GAAGa,UAAH,CAAc,KAAd,EAAqB+B,OAArB,CAA6B,EAAEjB,KAAKgB,OAAOE,UAAd,EAA7B,CADJ,EAC8D3C,IAD9D,CACoE4C,gBAC5D9C,GAAGa,UAAH,CAAc,KAAd,EAAqBkC,KAArB,GAA6B7C,IAA7B,CAAmCe,YAC/BN,IAAIZ,IAAJ,CAAS,EAAEqB,WAAWH,QAAb,EAAwB+B,cAAeF,YAAvC,EAAT,CADJ,CAFR,EAKMvC,KALN,CAKY0C,OAAM;AACd5C,gBAAQC,GAAR,CAAY2C,GAAZ;AACAtC,YAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAU,0BAAyB0B,GAAI,EAAzC,EAArB;AACH,KARD;AASH,CAzBD;;AA4BArD,IAAIsD,GAAJ,CAAQ,mBAAR,EAA6B,CAACxC,GAAD,EAAMC,GAAN,KAAc;AACzC,QAAIwC,UAAJ;AACA,QAAI;AACFA,qBAAa,sBAAazC,IAAIe,MAAJ,CAAWC,EAAxB,CAAb;AACD,KAFD,CAEE,OAAOlB,KAAP,EAAc;AACdG,YAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAU,4BAA2Bf,KAAM,EAA7C,EAArB;AACA;AACD;;AAED,UAAM4C,WAAW1C,IAAIuB,IAArB;AACA5B,YAAQC,GAAR,CAAY,uBAAZ,EAAoC8C,QAApC;;AAGA,WAAOA,SAASzB,GAAhB;;AAEF;AACA,QAAGyB,SAAShB,QAAZ,EAAqB;AACrBgB,iBAAShB,QAAT,CAAkBC,GAAlB,GAAuBC,WAAWc,SAAShB,QAAT,CAAkBC,GAA7B,CAAvB;AACAe,iBAAShB,QAAT,CAAkBG,GAAlB,GAAuBD,WAAWc,SAAShB,QAAT,CAAkBG,GAA7B,CAAvB;AACC;AACD;AACAa,aAASlB,IAAT,GAAgB,IAAIC,IAAJ,EAAhB,CArB2C,CAqBX;;;AAGhC9B,YAAQC,GAAR,CAAYkC,KAAKC,SAAL,CAAeW,QAAf,CAAZ;;AAEA;AACA;AACA;AACA;AACA;;AAEEpD,OAAGa,UAAH,CAAc,KAAd,EAAqBwC,SAArB,CAA+B,EAAE1B,KAAKwB,UAAP,EAA/B,EAAoD,EAAEG,MAAOF,QAAT,EAApD,EAAwElD,IAAxE,CAA6E,MAC3EF,GAAGa,UAAH,CAAc,KAAd,EAAqBC,IAArB,CAA0B,EAAEa,KAAKwB,UAAP,EAA1B,EAA+CvB,KAA/C,CAAqD,CAArD,EACCC,IADD,EADF,EAIC3B,IAJD,CAIMqD,iBAAiB;AACrB5C,YAAIZ,IAAJ,CAASwD,aAAT;AACD,KAND,EAOChD,KAPD,CAOOC,SAAS;AACdH,gBAAQC,GAAR,CAAYE,KAAZ;AACAG,YAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAU,0BAAyBf,KAAM,EAA3C,EAArB;AACD,KAVD;AAWD,CA3CD;;AA6CAZ,IAAI4D,MAAJ,CAAW,mBAAX,EAAgC,CAAC9C,GAAD,EAAKC,GAAL,KAAa;AACzC,QAAIwC,UAAJ;AACJ,QAAG;AACCA,qBAAa,sBAAazC,IAAIe,MAAJ,CAAWC,EAAxB,CAAb;AACH,KAFD,CAGA,OAAOlB,KAAP,EAAa;AACTG,YAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAW,4BAA2Bf,KAAM,EAA9C,EAArB;AACA;AACH;;AAEGR,OAAGa,UAAH,CAAc,KAAd,EAAqB4C,SAArB,CAA+B,EAAE9B,KAAMwB,UAAR,EAA/B,EAAqDjD,IAArD,CAA2DwD,gBAAgB;AACvE,YAAGA,aAAaf,MAAb,CAAoBgB,CAApB,KAA0B,CAA7B,EAAgChD,IAAIZ,IAAJ,CAAS,EAAEuB,QAAQ,IAAV,EAAT,EAAhC,KACKX,IAAIZ,IAAJ,CAAS,EAAEuB,QAAQ,2BAAV,EAAT;AACR,KAHD,EAICf,KAJD,CAIQC,SAAS;AACbH,gBAAQC,GAAR,CAAYE,KAAZ;AACAG,YAAIW,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEwB,SAAW,0BAAyBqC,MAAO,EAA7C,EAArB;AACH,KAPD;AAQH,CAlBD;;AAoBAhE,IAAIa,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvBA,QAAIkD,QAAJ,CAAaC,KAAKC,OAAL,CAAa,mBAAb,CAAb;AACH,CAFD;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA","file":"server.js","sourcesContent":["// const express =  require('express');\r\n// const bodyParser= require('body-parser');\r\n// const MongoClient = require('mongodb').MongoClient;\r\n// const Issue = require('./issue.js');\r\n\r\n\r\nimport express from 'express';                          //ES2015 \r\nimport bodyParser from 'body-parser';                   //ES2015 \r\nimport { MongoClient, ObjectId } from 'mongodb';                  //ES2015 \r\nimport Issue from './issue.js'                          //ES2015 \r\nimport 'babel-polyfill';\r\nimport SourceMapSupport from 'source-map-support';   //To let Node.js report line numbers by using source maps, we need to install thesource-map-support module, and also call the library in the application once\r\nSourceMapSupport.install();\r\n\r\nconst app = express();\r\napp.use(express.static('static'));\r\napp.use(bodyParser.json());\r\n\r\n// const issues = [\r\n//     {\r\n//         id: 1, status: 'open', owner: 'Ravan',\r\n//         created: new Date('2016-08-15'), effort: 5, completionDate: undefined,\r\n//         title: 'Error in console when clicking Add',\r\n//     },\r\n//     {\r\n//         id: 2, status: 'Assigned', owner: 'Eddie',\r\n//         created: new Date('2016-08-16'), effort: 14,\r\n//         completionDate: new Date('2016-08-30'),\r\n//         title: 'Missing bottom border on panel',\r\n//     },\r\n//     ];\r\n\r\n    // const validIssueStatus = {\r\n    //     New: true,\r\n    //     Open: true,\r\n    //     Assigned: true,\r\n    //     Fixed: true,\r\n    //     Verified: true,\r\n    //     Closed: true,\r\n    //     };\r\n\r\n    // const issueFieldType = {\r\n    //     status: 'required',\r\n    //     owner: 'required',\r\n    //     effort: 'optional',\r\n    //     created: 'required',\r\n    //     completionDate: 'optional',\r\n    //     title: 'required',\r\n    //     };\r\n\r\n// app.get('/hello', (req,res) => {\r\n//     res.send('Hello World');\r\n// });\r\n\r\nlet db;\r\nMongoClient.connect('mongodb://localhost').then(client => {\r\n    db = client.db('lmr');\r\n    app.listen(3000, () => {\r\n        console.log('App startedddddd on port 3000');\r\n    });\r\n}).catch(error => {\r\n    console.log('ERROR:', error);\r\n});\r\n\r\napp.get('/api/landmarks', (req,res) => {\r\n    const filter = {};\r\n    // console.log(req);\r\n    // if (req.query.status) filter.status = req.query.status;\r\n    // if(req.query.effort_lte || req.query.effort_gte) filter.effort = {};\r\n    // if(req.query.effort_lte)\r\n    //     filter.effort.$lte = parseInt(req.query.effort_lte, 10);\r\n    // if(req.query.effort_gte)\r\n    //     filter.effort.$gte = parseInt(req.query.effort_gte, 10)\r\n    // if(req.query.owner)\r\n    //     filter.owner = req.query.owner;\r\n\r\n    db.collection('lmr').find(filter).toArray().then( landmarks => {\r\n        const metadata = { total_count: landmarks.length };\r\n        res.json({ _metadata: metadata, records : landmarks})\r\n    }).catch(error =>{\r\n        console.log(error);\r\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n    });\r\n });\r\n\r\napp.get('/api/landmark/:id', (req,res) =>{\r\n        let issueId;\r\n        console.log(\"PARAMSSS \", req.params)\r\n        try {\r\n            issueId = new ObjectId(req.params.id);\r\n        } catch (error){\r\n            res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n            return;\r\n        }\r\n        \r\n        db.collection('lmr').find({ _id : issueId }).limit(1)\r\n        .next()\r\n        .then( issue => { \r\n            console.log(\"landmark retrieved from data \", issue)\r\n            if (!issue) res.status(404).json({ message: `No such issue: ${issueId}` });\r\n            else res.json(issue);\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n        });\r\n    });\r\n \r\napp.post('/api/landmark', (req,res) => {\r\n    const newLandmark = req.body;\r\n    // newIssue.id = issues.length + 1;\r\n    newLandmark.date = new Date();\r\n    newLandmark.location.lat= parseFloat(newLandmark.location.lat);\r\n    newLandmark.location.lng= parseFloat(newLandmark.location.lng)\r\n   console.log(JSON.stringify(newLandmark));\r\n    // const err = Issue.validateIssue(newLandmark)\r\n    // console.log(newLandmark);\r\n\r\n    // if(err){\r\n    //     res.status(422).json({ message: `Invalid request: ${err}` });\r\n    //     return;\r\n    // }\r\n\r\n   // issues.push(newIssue);\r\n    db.collection('lmr').insertOne(newLandmark).then( result => \r\n        db.collection('lmr').findOne({ _id: result.insertedId })).then( query_result => \r\n            db.collection('lmr').count().then( metadata => \r\n                res.json({ _metadata: metadata , new_landmark : query_result})        \r\n            )        \r\n        ).catch(err =>{\r\n        console.log(err);\r\n        res.status(500).json({ message: `Internal Server Error: ${err}` });\r\n    });\r\n});\r\n\r\n\r\napp.put('/api/landmark/:id', (req, res) => {\r\n  let landmarkId;\r\n  try {\r\n    landmarkId = new ObjectId(req.params.id);\r\n  } catch (error) {\r\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n    return;\r\n  }\r\n\r\n  const landmark = req.body;\r\n  console.log(\"landmark put req body\",landmark);\r\n\r\n\r\n  delete landmark._id;\r\n\r\n//   console.log(\"issue =>\",issue);\r\nif(landmark.location){\r\nlandmark.location.lat= parseFloat(landmark.location.lat);\r\nlandmark.location.lng= parseFloat(landmark.location.lng)\r\n}\r\n// landmark.date = new Date(landmark.date);\r\nlandmark.date = new Date();     //Last Updated\r\n\r\n\r\nconsole.log(JSON.stringify(landmark));\r\n\r\n//   const err = Issue.validateIssue(landmark);\r\n//   if (err) {\r\n//     res.status(422).json({ message: `Invalid request: ${err}` });\r\n//     return;\r\n//   }\r\n\r\n  db.collection('lmr').updateOne({ _id: landmarkId }, { $set : landmark}).then(() =>\r\n    db.collection('lmr').find({ _id: landmarkId }).limit(1)\r\n    .next()\r\n  )\r\n  .then(savedLandmark => {\r\n    res.json(savedLandmark);\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n  });\r\n});\r\n\r\napp.delete('/api/landmark/:id', (req,res) => {\r\n    let landmarkId;\r\ntry{\r\n    landmarkId = new ObjectId(req.params.id);\r\n}\r\ncatch (error){\r\n    res.status(422).json({ message : `Invalid issue ID format: ${error}`});\r\n    return;\r\n}\r\n    \r\n    db.collection('lmr').deleteOne({ _id : landmarkId }).then( deleteResult => {\r\n        if(deleteResult.result.n === 1) res.json({ status: 'OK'});\r\n        else res.json({ status: 'Warning: object not found' });\r\n    })\r\n    .catch( error => {\r\n        console.log(error);\r\n        res.status(500).json({ message : `Internal Server Error: ${errror}` });\r\n    });\r\n});\r\n\r\napp.get('*', (req, res) => {\r\n    res.sendFile(path.resolve('static/index.html'));\r\n});\r\n// app.listen(3000, function(){\r\n//     console.log('App started on port 3000');\r\n// });\r\n\r\n// function validateIssue(issue) {\r\n//     for(const field in issue ){\r\n//         const type = issueFieldType[field];\r\n//     if(!type) {\r\n//         delete issue[field];\r\n//     } else if ( type == 'required' && !issue[field]){\r\n//         return `${field} is required.`;\r\n//     }\r\n// }\r\n\r\n// if(!validIssueStatus[issue.status])\r\n//     return `${issue.status} is not a valid status.`;\r\n\r\n// return null;\r\n\r\n// }"]}